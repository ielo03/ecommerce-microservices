services:
  # MySQL database
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=notes_app
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-ppassword",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # Backend service
  backend:
    build: ./backend
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=8082
      - HOST=0.0.0.0
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=notes_app
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8082/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure
    # Ensure logs are not buffered
    tty: true
    stdin_open: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend service
  frontend:
    build: ./frontend
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=production
      - PORT=8081
      - HOST=0.0.0.0
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure
    # Ensure logs are not buffered
    tty: true
    stdin_open: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=8080
      - HOST=0.0.0.0
      - FRONTEND_HOST=frontend
      - BACKEND_HOST=backend
      - FRONTEND_PORT=8081
      - BACKEND_PORT=8082
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-q",
          "--spider",
          "http://localhost:8080/api-gateway/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure
    # Ensure logs are not buffered
    tty: true
    stdin_open: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
